<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dgut.dao.TeacherDesireMapper">
  <resultMap id="BaseResultMap" type="com.dgut.bean.TeacherDesire">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="subject" jdbcType="VARCHAR" property="subject" />
    <result column="area" jdbcType="VARCHAR" property="area" />
    <result column="coach_way" jdbcType="INTEGER" property="coachWay" />
    <result column="payment" jdbcType="VARCHAR" property="payment" />
    <result column="teacher_id" jdbcType="INTEGER" property="teacherId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, subject, area, coach_way, payment, teacher_id
  </sql>
  <select id="selectByExample" parameterType="com.dgut.bean.TeacherDesireExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from teacher_desire
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from teacher_desire
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from teacher_desire
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.dgut.bean.TeacherDesireExample">
    delete from teacher_desire
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.dgut.bean.TeacherDesire">
    insert into teacher_desire (id, subject, area, 
      coach_way, payment, teacher_id
      )
    values (#{id,jdbcType=INTEGER}, #{subject,jdbcType=VARCHAR}, #{area,jdbcType=VARCHAR}, 
      #{coachWay,jdbcType=INTEGER}, #{payment,jdbcType=VARCHAR}, #{teacherId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.dgut.bean.TeacherDesire">
    insert into teacher_desire
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="subject != null">
        subject,
      </if>
      <if test="area != null">
        area,
      </if>
      <if test="coachWay != null">
        coach_way,
      </if>
      <if test="payment != null">
        payment,
      </if>
      <if test="teacherId != null">
        teacher_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="subject != null">
        #{subject,jdbcType=VARCHAR},
      </if>
      <if test="area != null">
        #{area,jdbcType=VARCHAR},
      </if>
      <if test="coachWay != null">
        #{coachWay,jdbcType=INTEGER},
      </if>
      <if test="payment != null">
        #{payment,jdbcType=VARCHAR},
      </if>
      <if test="teacherId != null">
        #{teacherId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.dgut.bean.TeacherDesireExample" resultType="java.lang.Long">
    select count(*) from teacher_desire
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update teacher_desire
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.subject != null">
        subject = #{record.subject,jdbcType=VARCHAR},
      </if>
      <if test="record.area != null">
        area = #{record.area,jdbcType=VARCHAR},
      </if>
      <if test="record.coachWay != null">
        coach_way = #{record.coachWay,jdbcType=INTEGER},
      </if>
      <if test="record.payment != null">
        payment = #{record.payment,jdbcType=VARCHAR},
      </if>
      <if test="record.teacherId != null">
        teacher_id = #{record.teacherId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update teacher_desire
    set id = #{record.id,jdbcType=INTEGER},
      subject = #{record.subject,jdbcType=VARCHAR},
      area = #{record.area,jdbcType=VARCHAR},
      coach_way = #{record.coachWay,jdbcType=INTEGER},
      payment = #{record.payment,jdbcType=VARCHAR},
      teacher_id = #{record.teacherId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.dgut.bean.TeacherDesire">
    update teacher_desire
    <set>
      <if test="subject != null">
        subject = #{subject,jdbcType=VARCHAR},
      </if>
      <if test="area != null">
        area = #{area,jdbcType=VARCHAR},
      </if>
      <if test="coachWay != null">
        coach_way = #{coachWay,jdbcType=INTEGER},
      </if>
      <if test="payment != null">
        payment = #{payment,jdbcType=VARCHAR},
      </if>
      <if test="teacherId != null">
        teacher_id = #{teacherId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dgut.bean.TeacherDesire">
    update teacher_desire
    set subject = #{subject,jdbcType=VARCHAR},
      area = #{area,jdbcType=VARCHAR},
      coach_way = #{coachWay,jdbcType=INTEGER},
      payment = #{payment,jdbcType=VARCHAR},
      teacher_id = #{teacherId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>