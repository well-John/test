<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dgut.dao.ForderMapper">
  <resultMap id="BaseResultMap" type="com.dgut.bean.Forder">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="release_date" jdbcType="TIMESTAMP" property="releaseDate" />
    <result column="subject" jdbcType="VARCHAR" property="subject" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="appointment_id" jdbcType="INTEGER" property="appointmentId" />
    <result column="admin_id" jdbcType="INTEGER" property="adminId" />
    <result column="admin_name" jdbcType="VARCHAR" property="adminName" />
    <result column="student_id" jdbcType="INTEGER" property="studentId" />
    <result column="teacher_requirement_id" jdbcType="INTEGER" property="teacherRequirementId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, release_date, subject, status, appointment_id, admin_id, admin_name, student_id, 
    teacher_requirement_id
  </sql>
  <select id="selectByExample" parameterType="com.dgut.bean.ForderExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from forder
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from forder
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from forder
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.dgut.bean.ForderExample">
    delete from forder
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.dgut.bean.Forder">
    insert into forder (id, release_date, subject, 
      status, appointment_id, admin_id, 
      admin_name, student_id, teacher_requirement_id
      )
    values (#{id,jdbcType=INTEGER}, #{releaseDate,jdbcType=TIMESTAMP}, #{subject,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER}, #{appointmentId,jdbcType=INTEGER}, #{adminId,jdbcType=INTEGER}, 
      #{adminName,jdbcType=VARCHAR}, #{studentId,jdbcType=INTEGER}, #{teacherRequirementId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.dgut.bean.Forder">
    insert into forder
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="releaseDate != null">
        release_date,
      </if>
      <if test="subject != null">
        subject,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="appointmentId != null">
        appointment_id,
      </if>
      <if test="adminId != null">
        admin_id,
      </if>
      <if test="adminName != null">
        admin_name,
      </if>
      <if test="studentId != null">
        student_id,
      </if>
      <if test="teacherRequirementId != null">
        teacher_requirement_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="releaseDate != null">
        #{releaseDate,jdbcType=TIMESTAMP},
      </if>
      <if test="subject != null">
        #{subject,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="appointmentId != null">
        #{appointmentId,jdbcType=INTEGER},
      </if>
      <if test="adminId != null">
        #{adminId,jdbcType=INTEGER},
      </if>
      <if test="adminName != null">
        #{adminName,jdbcType=VARCHAR},
      </if>
      <if test="studentId != null">
        #{studentId,jdbcType=INTEGER},
      </if>
      <if test="teacherRequirementId != null">
        #{teacherRequirementId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.dgut.bean.ForderExample" resultType="java.lang.Long">
    select count(*) from forder
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update forder
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.releaseDate != null">
        release_date = #{record.releaseDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.subject != null">
        subject = #{record.subject,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.appointmentId != null">
        appointment_id = #{record.appointmentId,jdbcType=INTEGER},
      </if>
      <if test="record.adminId != null">
        admin_id = #{record.adminId,jdbcType=INTEGER},
      </if>
      <if test="record.adminName != null">
        admin_name = #{record.adminName,jdbcType=VARCHAR},
      </if>
      <if test="record.studentId != null">
        student_id = #{record.studentId,jdbcType=INTEGER},
      </if>
      <if test="record.teacherRequirementId != null">
        teacher_requirement_id = #{record.teacherRequirementId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update forder
    set id = #{record.id,jdbcType=INTEGER},
      release_date = #{record.releaseDate,jdbcType=TIMESTAMP},
      subject = #{record.subject,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      appointment_id = #{record.appointmentId,jdbcType=INTEGER},
      admin_id = #{record.adminId,jdbcType=INTEGER},
      admin_name = #{record.adminName,jdbcType=VARCHAR},
      student_id = #{record.studentId,jdbcType=INTEGER},
      teacher_requirement_id = #{record.teacherRequirementId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.dgut.bean.Forder">
    update forder
    <set>
      <if test="releaseDate != null">
        release_date = #{releaseDate,jdbcType=TIMESTAMP},
      </if>
      <if test="subject != null">
        subject = #{subject,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="appointmentId != null">
        appointment_id = #{appointmentId,jdbcType=INTEGER},
      </if>
      <if test="adminId != null">
        admin_id = #{adminId,jdbcType=INTEGER},
      </if>
      <if test="adminName != null">
        admin_name = #{adminName,jdbcType=VARCHAR},
      </if>
      <if test="studentId != null">
        student_id = #{studentId,jdbcType=INTEGER},
      </if>
      <if test="teacherRequirementId != null">
        teacher_requirement_id = #{teacherRequirementId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dgut.bean.Forder">
    update forder
    set release_date = #{releaseDate,jdbcType=TIMESTAMP},
      subject = #{subject,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      appointment_id = #{appointmentId,jdbcType=INTEGER},
      admin_id = #{adminId,jdbcType=INTEGER},
      admin_name = #{adminName,jdbcType=VARCHAR},
      student_id = #{studentId,jdbcType=INTEGER},
      teacher_requirement_id = #{teacherRequirementId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>