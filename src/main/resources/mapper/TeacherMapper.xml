<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dgut.dao.TeacherMapper">
  <resultMap id="BaseResultMap" type="com.dgut.bean.Teacher">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="nickname" jdbcType="VARCHAR" property="nickname" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="sex" jdbcType="INTEGER" property="sex" />
    <result column="birthday" jdbcType="VARCHAR" property="birthday" />
    <result column="education" jdbcType="VARCHAR" property="education" />
    <result column="major" jdbcType="VARCHAR" property="major" />
    <result column="university" jdbcType="VARCHAR" property="university" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="teaching_time" jdbcType="VARCHAR" property="teachingTime" />
    <result column="teaching_area" jdbcType="VARCHAR" property="teachingArea" />
    <result column="teaching_subject" jdbcType="VARCHAR" property="teachingSubject" />
    <result column="foreign_level" jdbcType="VARCHAR" property="foreignLevel" />
    <result column="experience" jdbcType="VARCHAR" property="experience" />
    <result column="avatar" jdbcType="VARCHAR" property="avatar" />
    <result column="last_time" jdbcType="DATE" property="lastTime" />
    <result column="register_time" jdbcType="DATE" property="registerTime" />
    <result column="last_ip" jdbcType="VARCHAR" property="lastIp" />
    <result column="isabled" jdbcType="INTEGER" property="isabled" />
    <result column="identity" jdbcType="INTEGER" property="identity" />
    <result column="qq" jdbcType="VARCHAR" property="qq" />
    <result column="current_status" jdbcType="VARCHAR" property="currentStatus" />
    <result column="wechat" jdbcType="VARCHAR" property="wechat" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, nickname, name, password, sex, birthday, education, major, university, phone, 
    email, description, address, teaching_time, teaching_area, teaching_subject, foreign_level, 
    experience, avatar, last_time, register_time, last_ip, isabled, identity, qq, current_status, 
    wechat
  </sql>
  <select id="selectByExample" parameterType="com.dgut.bean.TeacherExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from teacher
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from teacher
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from teacher
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.dgut.bean.TeacherExample">
    delete from teacher
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.dgut.bean.Teacher">
    insert into teacher (id, nickname, name, 
      password, sex, birthday, 
      education, major, university, 
      phone, email, description, 
      address, teaching_time, teaching_area, 
      teaching_subject, foreign_level, experience, 
      avatar, last_time, register_time, 
      last_ip, isabled, identity, 
      qq, current_status, wechat
      )
    values (#{id,jdbcType=INTEGER}, #{nickname,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{sex,jdbcType=INTEGER}, #{birthday,jdbcType=VARCHAR}, 
      #{education,jdbcType=VARCHAR}, #{major,jdbcType=VARCHAR}, #{university,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, 
      #{address,jdbcType=VARCHAR}, #{teachingTime,jdbcType=VARCHAR}, #{teachingArea,jdbcType=VARCHAR}, 
      #{teachingSubject,jdbcType=VARCHAR}, #{foreignLevel,jdbcType=VARCHAR}, #{experience,jdbcType=VARCHAR}, 
      #{avatar,jdbcType=VARCHAR}, #{lastTime,jdbcType=DATE}, #{registerTime,jdbcType=DATE}, 
      #{lastIp,jdbcType=VARCHAR}, #{isabled,jdbcType=INTEGER}, #{identity,jdbcType=INTEGER}, 
      #{qq,jdbcType=VARCHAR}, #{currentStatus,jdbcType=VARCHAR}, #{wechat,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.dgut.bean.Teacher">
    insert into teacher
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="nickname != null">
        nickname,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="education != null">
        education,
      </if>
      <if test="major != null">
        major,
      </if>
      <if test="university != null">
        university,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="teachingTime != null">
        teaching_time,
      </if>
      <if test="teachingArea != null">
        teaching_area,
      </if>
      <if test="teachingSubject != null">
        teaching_subject,
      </if>
      <if test="foreignLevel != null">
        foreign_level,
      </if>
      <if test="experience != null">
        experience,
      </if>
      <if test="avatar != null">
        avatar,
      </if>
      <if test="lastTime != null">
        last_time,
      </if>
      <if test="registerTime != null">
        register_time,
      </if>
      <if test="lastIp != null">
        last_ip,
      </if>
      <if test="isabled != null">
        isabled,
      </if>
      <if test="identity != null">
        identity,
      </if>
      <if test="qq != null">
        qq,
      </if>
      <if test="currentStatus != null">
        current_status,
      </if>
      <if test="wechat != null">
        wechat,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="nickname != null">
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=INTEGER},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=VARCHAR},
      </if>
      <if test="education != null">
        #{education,jdbcType=VARCHAR},
      </if>
      <if test="major != null">
        #{major,jdbcType=VARCHAR},
      </if>
      <if test="university != null">
        #{university,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="teachingTime != null">
        #{teachingTime,jdbcType=VARCHAR},
      </if>
      <if test="teachingArea != null">
        #{teachingArea,jdbcType=VARCHAR},
      </if>
      <if test="teachingSubject != null">
        #{teachingSubject,jdbcType=VARCHAR},
      </if>
      <if test="foreignLevel != null">
        #{foreignLevel,jdbcType=VARCHAR},
      </if>
      <if test="experience != null">
        #{experience,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="lastTime != null">
        #{lastTime,jdbcType=DATE},
      </if>
      <if test="registerTime != null">
        #{registerTime,jdbcType=DATE},
      </if>
      <if test="lastIp != null">
        #{lastIp,jdbcType=VARCHAR},
      </if>
      <if test="isabled != null">
        #{isabled,jdbcType=INTEGER},
      </if>
      <if test="identity != null">
        #{identity,jdbcType=INTEGER},
      </if>
      <if test="qq != null">
        #{qq,jdbcType=VARCHAR},
      </if>
      <if test="currentStatus != null">
        #{currentStatus,jdbcType=VARCHAR},
      </if>
      <if test="wechat != null">
        #{wechat,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.dgut.bean.TeacherExample" resultType="java.lang.Long">
    select count(*) from teacher
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update teacher
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.nickname != null">
        nickname = #{record.nickname,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=INTEGER},
      </if>
      <if test="record.birthday != null">
        birthday = #{record.birthday,jdbcType=VARCHAR},
      </if>
      <if test="record.education != null">
        education = #{record.education,jdbcType=VARCHAR},
      </if>
      <if test="record.major != null">
        major = #{record.major,jdbcType=VARCHAR},
      </if>
      <if test="record.university != null">
        university = #{record.university,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.teachingTime != null">
        teaching_time = #{record.teachingTime,jdbcType=VARCHAR},
      </if>
      <if test="record.teachingArea != null">
        teaching_area = #{record.teachingArea,jdbcType=VARCHAR},
      </if>
      <if test="record.teachingSubject != null">
        teaching_subject = #{record.teachingSubject,jdbcType=VARCHAR},
      </if>
      <if test="record.foreignLevel != null">
        foreign_level = #{record.foreignLevel,jdbcType=VARCHAR},
      </if>
      <if test="record.experience != null">
        experience = #{record.experience,jdbcType=VARCHAR},
      </if>
      <if test="record.avatar != null">
        avatar = #{record.avatar,jdbcType=VARCHAR},
      </if>
      <if test="record.lastTime != null">
        last_time = #{record.lastTime,jdbcType=DATE},
      </if>
      <if test="record.registerTime != null">
        register_time = #{record.registerTime,jdbcType=DATE},
      </if>
      <if test="record.lastIp != null">
        last_ip = #{record.lastIp,jdbcType=VARCHAR},
      </if>
      <if test="record.isabled != null">
        isabled = #{record.isabled,jdbcType=INTEGER},
      </if>
      <if test="record.identity != null">
        identity = #{record.identity,jdbcType=INTEGER},
      </if>
      <if test="record.qq != null">
        qq = #{record.qq,jdbcType=VARCHAR},
      </if>
      <if test="record.currentStatus != null">
        current_status = #{record.currentStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.wechat != null">
        wechat = #{record.wechat,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update teacher
    set id = #{record.id,jdbcType=INTEGER},
      nickname = #{record.nickname,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=INTEGER},
      birthday = #{record.birthday,jdbcType=VARCHAR},
      education = #{record.education,jdbcType=VARCHAR},
      major = #{record.major,jdbcType=VARCHAR},
      university = #{record.university,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      teaching_time = #{record.teachingTime,jdbcType=VARCHAR},
      teaching_area = #{record.teachingArea,jdbcType=VARCHAR},
      teaching_subject = #{record.teachingSubject,jdbcType=VARCHAR},
      foreign_level = #{record.foreignLevel,jdbcType=VARCHAR},
      experience = #{record.experience,jdbcType=VARCHAR},
      avatar = #{record.avatar,jdbcType=VARCHAR},
      last_time = #{record.lastTime,jdbcType=DATE},
      register_time = #{record.registerTime,jdbcType=DATE},
      last_ip = #{record.lastIp,jdbcType=VARCHAR},
      isabled = #{record.isabled,jdbcType=INTEGER},
      identity = #{record.identity,jdbcType=INTEGER},
      qq = #{record.qq,jdbcType=VARCHAR},
      current_status = #{record.currentStatus,jdbcType=VARCHAR},
      wechat = #{record.wechat,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.dgut.bean.Teacher">
    update teacher
    <set>
      <if test="nickname != null">
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=INTEGER},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=VARCHAR},
      </if>
      <if test="education != null">
        education = #{education,jdbcType=VARCHAR},
      </if>
      <if test="major != null">
        major = #{major,jdbcType=VARCHAR},
      </if>
      <if test="university != null">
        university = #{university,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="teachingTime != null">
        teaching_time = #{teachingTime,jdbcType=VARCHAR},
      </if>
      <if test="teachingArea != null">
        teaching_area = #{teachingArea,jdbcType=VARCHAR},
      </if>
      <if test="teachingSubject != null">
        teaching_subject = #{teachingSubject,jdbcType=VARCHAR},
      </if>
      <if test="foreignLevel != null">
        foreign_level = #{foreignLevel,jdbcType=VARCHAR},
      </if>
      <if test="experience != null">
        experience = #{experience,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        avatar = #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="lastTime != null">
        last_time = #{lastTime,jdbcType=DATE},
      </if>
      <if test="registerTime != null">
        register_time = #{registerTime,jdbcType=DATE},
      </if>
      <if test="lastIp != null">
        last_ip = #{lastIp,jdbcType=VARCHAR},
      </if>
      <if test="isabled != null">
        isabled = #{isabled,jdbcType=INTEGER},
      </if>
      <if test="identity != null">
        identity = #{identity,jdbcType=INTEGER},
      </if>
      <if test="qq != null">
        qq = #{qq,jdbcType=VARCHAR},
      </if>
      <if test="currentStatus != null">
        current_status = #{currentStatus,jdbcType=VARCHAR},
      </if>
      <if test="wechat != null">
        wechat = #{wechat,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dgut.bean.Teacher">
    update teacher
    set nickname = #{nickname,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=INTEGER},
      birthday = #{birthday,jdbcType=VARCHAR},
      education = #{education,jdbcType=VARCHAR},
      major = #{major,jdbcType=VARCHAR},
      university = #{university,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      teaching_time = #{teachingTime,jdbcType=VARCHAR},
      teaching_area = #{teachingArea,jdbcType=VARCHAR},
      teaching_subject = #{teachingSubject,jdbcType=VARCHAR},
      foreign_level = #{foreignLevel,jdbcType=VARCHAR},
      experience = #{experience,jdbcType=VARCHAR},
      avatar = #{avatar,jdbcType=VARCHAR},
      last_time = #{lastTime,jdbcType=DATE},
      register_time = #{registerTime,jdbcType=DATE},
      last_ip = #{lastIp,jdbcType=VARCHAR},
      isabled = #{isabled,jdbcType=INTEGER},
      identity = #{identity,jdbcType=INTEGER},
      qq = #{qq,jdbcType=VARCHAR},
      current_status = #{currentStatus,jdbcType=VARCHAR},
      wechat = #{wechat,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>